"use strict";(self.webpackChunkweihubeats_website=self.webpackChunkweihubeats_website||[]).push([[4065],{7062:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/deleteExpiredFiles-9221d53d647f2d9c11c22f45ae76998d.png"},7745:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"MQ/RocketMQ/\u6e90\u7801\u5206\u6790/RocketMQ\u78c1\u76d8\u6ee1\u4e86\u5f88\u614c\u4e0d\u77e5\u600e\u4e48\u529e\uff1f\u542c\u6211\u7ed9\u4f60\u6e90\u7801\u5206\u6790\u8fc7\u671f\u6587\u4ef6\u5982\u4f55\u5220\u9664","title":"RocketMQ\u78c1\u76d8\u6ee1\u4e86\u5f88\u614c\u4e0d\u77e5\u600e\u4e48\u529e\uff1f\u542c\u6211\u7ed9\u4f60\u6e90\u7801\u5206\u6790\u8fc7\u671f\u6587\u4ef6\u5982\u4f55\u5220\u9664","description":"\u5927\u5bb6\u597d\uff0c\u8fd9\u91cc\u662f\u5c0f\u594f,\u89c9\u5f97\u6587\u7ae0\u4e0d\u9519\u53ef\u4ee5\u5173\u6ce8\u516c\u4f17\u53f7\u5c0f\u594f\u6280\u672f","source":"@site/docs/MQ/RocketMQ/\u6e90\u7801\u5206\u6790/RocketMQ\u78c1\u76d8\u6ee1\u4e86\u5f88\u614c\u4e0d\u77e5\u600e\u4e48\u529e\uff1f\u542c\u6211\u7ed9\u4f60\u6e90\u7801\u5206\u6790\u8fc7\u671f\u6587\u4ef6\u5982\u4f55\u5220\u9664.md","sourceDirName":"MQ/RocketMQ/\u6e90\u7801\u5206\u6790","slug":"/MQ/RocketMQ/\u6e90\u7801\u5206\u6790/RocketMQ\u78c1\u76d8\u6ee1\u4e86\u5f88\u614c\u4e0d\u77e5\u600e\u4e48\u529e\uff1f\u542c\u6211\u7ed9\u4f60\u6e90\u7801\u5206\u6790\u8fc7\u671f\u6587\u4ef6\u5982\u4f55\u5220\u9664","permalink":"/docs/MQ/RocketMQ/\u6e90\u7801\u5206\u6790/RocketMQ\u78c1\u76d8\u6ee1\u4e86\u5f88\u614c\u4e0d\u77e5\u600e\u4e48\u529e\uff1f\u542c\u6211\u7ed9\u4f60\u6e90\u7801\u5206\u6790\u8fc7\u671f\u6587\u4ef6\u5982\u4f55\u5220\u9664","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/MQ/RocketMQ/\u6e90\u7801\u5206\u6790/RocketMQ\u78c1\u76d8\u6ee1\u4e86\u5f88\u614c\u4e0d\u77e5\u600e\u4e48\u529e\uff1f\u542c\u6211\u7ed9\u4f60\u6e90\u7801\u5206\u6790\u8fc7\u671f\u6587\u4ef6\u5982\u4f55\u5220\u9664.md","tags":[],"version":"current","frontMatter":{},"sidebar":"RocketMQ","previous":{"title":"RocketMQ\u78c1\u76d8\u6838\u5fc3\u914d\u7f6e","permalink":"/docs/MQ/RocketMQ/\u6e90\u7801\u5206\u6790/RocketMQ\u78c1\u76d8\u6838\u5fc3\u914d\u7f6e"},"next":{"title":"RocketMQ\u7ed3\u5408\u6e90\u7801\u544a\u8bc9\u4f60\u6d88\u606f\u91cf\u5927\u4e3a\u5565\u4e0d\u9700\u8981\u624b\u52a8\u538b\u7f29\u6d88\u606f","permalink":"/docs/MQ/RocketMQ/\u6e90\u7801\u5206\u6790/RocketMQ\u7ed3\u5408\u6e90\u7801\u544a\u8bc9\u4f60\u6d88\u606f\u91cf\u5927\u4e3a\u5565\u4e0d\u9700\u8981\u624b\u52a8\u538b\u7f29\u6d88\u606f"}}');var l=i(4848),t=i(8453);const c={},r=void 0,o={},d=[{value:"RocketMQ\u7248\u672c",id:"rocketmq\u7248\u672c",level:2},{value:"\u6587\u4ef6\u7c7b\u578b",id:"\u6587\u4ef6\u7c7b\u578b",level:2},{value:"\u6e90\u7801\u5165\u53e3",id:"\u6e90\u7801\u5165\u53e3",level:2},{value:"commitLog\u5220\u9664",id:"commitlog\u5220\u9664",level:2},{value:"deleteExpiredFiles",id:"deleteexpiredfiles",level:3},{value:"consumeQueue\u5220\u9664",id:"consumequeue\u5220\u9664",level:2},{value:"IndexFile\u5220\u9664",id:"indexfile\u5220\u9664",level:2},{value:"5.0\u4e2d\u65b0\u589e\u7684correctLogicMinOffset\u65b9\u6cd5",id:"50\u4e2d\u65b0\u589e\u7684correctlogicminoffset\u65b9\u6cd5",level:2},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",level:2}];function a(e){const n={blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["\u5927\u5bb6\u597d\uff0c\u8fd9\u91cc\u662f",(0,l.jsx)(n.strong,{children:"\u5c0f\u594f"}),",\u89c9\u5f97\u6587\u7ae0\u4e0d\u9519\u53ef\u4ee5\u5173\u6ce8\u516c\u4f17\u53f7",(0,l.jsx)(n.strong,{children:"\u5c0f\u594f\u6280\u672f"})]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"rocketmq\u7248\u672c",children:"RocketMQ\u7248\u672c"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"5.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"\u6587\u4ef6\u7c7b\u578b",children:"\u6587\u4ef6\u7c7b\u578b"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"RocketMQ"}),"\u76ee\u524d\u4e3b\u8981\u662f\u4e09\u79cd\u6587\u4ef6"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"commitlog"}),"\n",(0,l.jsx)(n.li,{children:"consumequeue"}),"\n",(0,l.jsx)(n.li,{children:"index"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"\u6e90\u7801\u5165\u53e3",children:"\u6e90\u7801\u5165\u53e3"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"org.apache.rocketmq.store.DefaultMessageStore#addScheduleTask"})}),"\n",(0,l.jsxs)(n.p,{children:["\u6e90\u7801\u5165\u53e3\u4e3b\u8981\u662f\u5728",(0,l.jsx)(n.code,{children:"DefaultMessageStore"}),"\u7c7b\u4e2d\u7684",(0,l.jsx)(n.code,{children:"addScheduleTask"}),"\u4e2d"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"    private void addScheduleTask() {\n\n    this.scheduledExecutorService.scheduleAtFixedRate(new AbstractBrokerRunnable(this.getBrokerIdentity()) {\n        @Override\n        public void run0() {\n            DefaultMessageStore.this.cleanFilesPeriodically();\n        }\n    }, 1000 * 60, this.messageStoreConfig.getCleanResourceInterval(), TimeUnit.MILLISECONDS);\n}\n"})}),"\n",(0,l.jsxs)(n.p,{children:["\u8fd9\u91cc\u542f\u52a8\u4e86\u4e00\u4e2a\u5b9a\u65f6\u4efb\u52a1\uff0c\u5ef6\u65f660s\u6267\u884c\uff0c\u6bcf\u9694",(0,l.jsx)(n.code,{children:"cleanResourceInterval"})," \u6beb\u79d2\u6267\u884c\u4e00\u6b21",(0,l.jsx)(n.code,{children:"cleanFilesPeriodically"}),"\u65b9\u6cd5\uff0c\u9ed8\u8ba410000\uff0c\u537310s\u6267\u884c\u4e00\u6b21"]}),"\n",(0,l.jsxs)(n.p,{children:["\u4e4b\u524d\u63d0\u5230\u4e3b\u8981\u4e09\u79cd\u7c7b\u578b\u7684\u6587\u4ef6\uff0c\u6240\u4ee5\u5728",(0,l.jsx)(n.code,{children:"cleanFilesPeriodically"}),"\u65b9\u6cd5\u4e2d\u4f1a\u5bf9\u8fd9\u4e09\u79cd\u6587\u4ef6\u8fdb\u884c\u5220\u9664"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"    private void cleanFilesPeriodically() {\n    this.cleanCommitLogService.run();\n    this.cleanConsumeQueueService.run();\n    this.correctLogicOffsetService.run();\n}\n"})}),"\n",(0,l.jsx)(n.h2,{id:"commitlog\u5220\u9664",children:"commitLog\u5220\u9664"}),"\n",(0,l.jsxs)(n.p,{children:["\u8fd9\u91cc\u6211\u4eec\u5148\u770b\u770b",(0,l.jsx)(n.code,{children:"cleanCommitLogService"}),"\u662f\u5982\u4f55\u5220\u9664",(0,l.jsx)(n.code,{children:"commitLog"}),"\u7684"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:'        public void run() {\n            try {\n                // \u5220\u9664\u8fc7\u671f(\u6216\u8005\u5f3a\u5236\u5220\u9664)commitLog\u6587\u4ef6\n                this.deleteExpiredFiles();\n                // \u5220\u9664\u88ab\u6302\u8d77\u7684\u6587\u4ef6(\u5220\u9664\u5931\u8d25\u7684)\n                this.reDeleteHangedFile();\n            } catch (Throwable e) {\n                DefaultMessageStore.LOGGER.warn(this.getServiceName() + " service has exception. ", e);\n            }\n        }\n'})}),"\n",(0,l.jsxs)(n.p,{children:["\u6838\u5fc3\u7684\u5220\u9664\u903b\u8f91\u5728",(0,l.jsx)(n.code,{children:"deleteExpiredFiles"}),"\u65b9\u6cd5\u4e2d"]}),"\n",(0,l.jsx)(n.h3,{id:"deleteexpiredfiles",children:"deleteExpiredFiles"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{alt:"alt text",src:i(7062).A+"",width:"2004",height:"980"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:'        private void deleteExpiredFiles() {\n            int deleteCount = 0;\n            // \u83b7\u53d6\u6587\u4ef6\u4fdd\u7559\u65f6\u95f4\uff0c\u9ed8\u8ba472\u5c0f\u65f6\n            long fileReservedTime = DefaultMessageStore.this.getMessageStoreConfig().getFileReservedTime();\n            // \u83b7\u53d6\u5220\u9664\u6587\u4ef6\u7684\u95f4\u9694\uff0c\u9ed8\u8ba4100ms \u5220\u9664\u5b8c\u4e00\u4e2a\u6587\u4ef6\u540e\uff0c\u7b49\u5f85100ms\u518d\u5220\u9664\u4e0b\u4e00\u4e2a\n            int deletePhysicFilesInterval = DefaultMessageStore.this.getMessageStoreConfig().getDeleteCommitLogFilesInterval();\n            // \u5f3a\u5236\u5220\u9664\u6587\u4ef6\u7684\u95f4\u9694 \u9ed8\u8ba4120s \u7b2c\u4e00\u6b21\u5220\u9664\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u88ab\u5176\u4ed6\u7ebf\u7a0b\u5360\u7528\u5219\u4f1a\u5220\u9664\u5931\u8d25\uff0c\u5219\u4f1a\u7b49\u5f85120s\u540e\u518d\u6b21\u5220\u9664\n            int destroyMappedFileIntervalForcibly = DefaultMessageStore.this.getMessageStoreConfig().getDestroyMapedFileIntervalForcibly();\n            // \u4e00\u6b21\u5220\u9664\u6587\u4ef6\u7684\u6700\u5927\u6570\u91cf\uff0c\u9ed8\u8ba410\n            int deleteFileBatchMax = DefaultMessageStore.this.getMessageStoreConfig().getDeleteFileBatchMax();\n            \n            // \u662f\u5230\u8fbe\u8bbe\u7f6e\u7684\u5220\u9664\u6587\u4ef6\u7684\u65f6\u95f4\uff08\u9ed8\u8ba4\u51cc\u66684\u70b9\uff09\n            boolean isTimeUp = this.isTimeToDelete();\n            // \u78c1\u76d8\u7a7a\u95f4\u662f\u5426\u4e0d\u8db3\uff0875%\uff09 \u5982\u679c\u78c1\u76d8\u7a7a\u95f4\u5927\u4e8ediskSpaceWarningLevelRatio(\u9ed8\u8ba490%)\u5e76\u6807\u8bb0\u78c1\u76d8\u5df2\u6ee1\uff0c\u5e76\u6807\u8bb0cleanImmediately(\u5f3a\u5236\u5220\u9664) true\n            boolean isUsageExceedsThreshold = this.isSpaceToDelete();\n            // \u624b\u52a8\u5220\u9664\u662f\u5426\u88ab\u89e6\u53d1\uff08\u89e6\u53d1\u5219\u4f1a\u8bbemanualDeleteFileSeveralTimes\u4e3a20\uff0c\u6bcf\u6267\u884c\u4e00\u6b21\u5220\u9664\u65b9\u6cd5\u51cf\u5c11\u4e00\u6b21\uff09\n            boolean isManualDelete = this.manualDeleteFileSeveralTimes > 0;\n            \n            // \u4e09\u4e2a\u6761\u4ef6\u6ee1\u8db3\u4e00\u4e2a\u5219\u7ee7\u7eed\u5220\u9664 \n            // 1. \u5230\u8fbe\u6307\u5b9a\u6587\u4ef6\u5220\u9664\u65f6\u95f4 \u9ed8\u8ba4\u51cc\u66684\u70b9\n            // 2. \u78c1\u76d8\u7a7a\u95f4\u4e0d\u8db3\uff0c \u9ed8\u8ba475%\n            // 3. \u624b\u52a8\u5220\u9664\u88ab\u89e6\u53d1 \u8c03\u7528 executeDeleteFilesManually\u65b9\u6cd5 \u53ef\u4ee5\u901a\u8fc7admin\u547d\u4ee4\u5de5\u5177 \u6267\u884c deleteExpiredCommitLog\u547d\u4ee4\n            if (isTimeUp || isUsageExceedsThreshold || isManualDelete) {\n\n                if (isManualDelete) {\n                    this.manualDeleteFileSeveralTimes--;\n                }\n                \n                // \u662f\u5426\u5f3a\u5236\u5220\u9664 \u4e0a\u9762\u901a\u8fc7isSpaceToDelete\u65b9\u6cd5\u5bf9cleanImmediately\u8fdb\u884c\u4e86\u6807\u8bb0\n                boolean cleanAtOnce = DefaultMessageStore.this.getMessageStoreConfig().isCleanFileForciblyEnable() && this.cleanImmediately;\n\n                LOGGER.info("begin to delete before {} hours file. isTimeUp: {} isUsageExceedsThreshold: {} manualDeleteFileSeveralTimes: {} cleanAtOnce: {} deleteFileBatchMax: {}",\n                    fileReservedTime,\n                    isTimeUp,\n                    isUsageExceedsThreshold,\n                    manualDeleteFileSeveralTimes,\n                    cleanAtOnce,\n                    deleteFileBatchMax);\n                \n                // \u6587\u4ef6\u9ed8\u8ba4\u4fdd\u5b58\u65f6\u95f4\uff0c\u9ed8\u8ba4\u5c0f\u65f6 \u8f6c\u6362\u4e3a\u6beb\u79d2\n                fileReservedTime *= 60 * 60 * 1000;\n                \n                // \u6267\u884c\u6587\u4ef6\u5220\u9664\uff0c\u5e76\u8fd4\u56de\u6587\u4ef6\u5220\u9664\u6210\u529f\u7684\u6570\u91cf\n                deleteCount = DefaultMessageStore.this.commitLog.deleteExpiredFile(fileReservedTime, deletePhysicFilesInterval,\n                    destroyMappedFileIntervalForcibly, cleanAtOnce, deleteFileBatchMax);\n                if (deleteCount > 0) {\n                    // If in the controller mode, we should notify the AutoSwitchHaService to truncateEpochFile\n                    if (DefaultMessageStore.this.brokerConfig.isEnableControllerMode()) {\n                        if (DefaultMessageStore.this.haService instanceof AutoSwitchHAService) {\n                            final long minPhyOffset = getMinPhyOffset();\n                            ((AutoSwitchHAService) DefaultMessageStore.this.haService).truncateEpochFilePrefix(minPhyOffset - 1);\n                        }\n                    }\n                } else if (isUsageExceedsThreshold) {\n                    LOGGER.warn("disk space will be full soon, but delete file failed.");\n                }\n            }\n        }\n'})}),"\n",(0,l.jsxs)(n.p,{children:["\u5b9e\u9645\u7684\u6587\u4ef6\u5220\u9664\u88ab\u5c01\u88c5\u5728\u65b9\u6cd5",(0,l.jsx)(n.code,{children:"org.apache.rocketmq.store.MappedFileQueue#deleteExpiredFileByTime"}),"\u4e2d"]}),"\n",(0,l.jsxs)(n.p,{children:["\u6211\u4eec\u6765\u770b\u770b",(0,l.jsx)(n.code,{children:"org.apache.rocketmq.store.MappedFileQueue#deleteExpiredFileByTime"}),"\u65b9\u6cd5\u5177\u4f53\u7684\u5b9e\u73b0"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:'    public int deleteExpiredFileByTime(final long expiredTime, // \u6587\u4ef6\u8fc7\u671f\u65f6\u95f4\n        final int deleteFilesInterval, // \u5220\u9664\u4e24\u4e2a\u6587\u4ef6\u7684\u95f4\u9694\u65f6\u95f4\n        final long intervalForcibly, // \u4e0a\u6b21\u5173\u95ed\u65f6\u95f4\u95f4\u9694\u8d85\u8fc7\u8be5\u503c\u5219\u5f3a\u5236\u5220\u9664\n        final boolean cleanImmediately, // \u662f\u5426\u5f3a\u5236\u5220\u9664\u6587\u4ef6\n        final int deleteFileBatchMax) { // \u4e00\u6b21\u5220\u9664\u6587\u4ef6\u7684\u6700\u5927\u6570\u91cf\n        // \u83b7\u53d6 mappedFiles \u6587\u4ef6\u5217\u8868\n        Object[] mfs = this.copyMappedFiles(0);\n\n        if (null == mfs)\n            return 0;\n\n        int mfsLength = mfs.length - 1;\n        int deleteCount = 0;\n        List<MappedFile> files = new ArrayList<>();\n        int skipFileNum = 0;\n        if (null != mfs) {\n            // \u68c0\u67e5\u6587\u4ef6\u5b8c\u6574\u6027\n            checkSelf();\n            for (int i = 0; i < mfsLength; i++) {\n                MappedFile mappedFile = (MappedFile) mfs[i];\n                // \u6587\u4ef6\u5b58\u6d3b\u65f6\u95f4 = \u6587\u4ef6\u6700\u540e\u4fee\u6539\u7684\u65f6\u95f4 + \u6587\u4ef6\u8fc7\u671f\u65f6\u95f4\n                long liveMaxTimestamp = mappedFile.getLastModifiedTimestamp() + expiredTime;\n                // \u6587\u4ef6\u8fc7\u671f\u6216\u8005\u5f00\u542f\u5f3a\u5236\u5220\u9664\n                if (System.currentTimeMillis() >= liveMaxTimestamp || cleanImmediately) {\n                    if (skipFileNum > 0) {\n                        log.info("Delete CommitLog {} but skip {} files", mappedFile.getFileName(), skipFileNum);\n                    }\n                    // \u771f\u6b63\u7684\u6587\u4ef6\u5220\u9664\n                    if (mappedFile.destroy(intervalForcibly)) {\n                        files.add(mappedFile);\n                        deleteCount++;\n                        // \u6700\u591a\u5220\u9664\u9ed8\u8ba410\u4e2a\u6587\u4ef6\n                        if (files.size() >= deleteFileBatchMax) {\n                            break;\n                        }\n\n                        if (deleteFilesInterval > 0 && (i + 1) < mfsLength) {\n                            try {\n                                Thread.sleep(deleteFilesInterval);\n                            } catch (InterruptedException e) {\n                            }\n                        }\n                    } else {\n                        break;\n                    }\n                } else {\n                    skipFileNum++;\n                    //avoid deleting files in the middle\n                    break;\n                }\n            }\n        }\n        // \u5c06\u5220\u9664\u7684\u6587\u4ef6\u4ece mappedFiles \u4e2d\u79fb\u9664\n        deleteExpiredFile(files);\n\n        return deleteCount;\n    }\n\n\n'})}),"\n",(0,l.jsxs)(n.p,{children:["\u8fd9\u91cc\u771f\u6b63\u6267\u884c\u6587\u4ef6\u5220\u9664\u7684\u903b\u8f91\u5728",(0,l.jsx)(n.code,{children:"mappedFile.destroy"})]}),"\n",(0,l.jsx)(n.p,{children:"\u4e3b\u8981\u7684\u903b\u8f91\u5c31\u662f\u6821\u9a8c\u6587\u4ef6\u662f\u5426\u8fc7\u671f\u6216\u8005\u5f3a\u5236\u5220\u9664"}),"\n",(0,l.jsxs)(n.p,{children:["\u5982\u679c\u662f\u5219\u5220\u9664\u6587\u4ef6\uff0c\u540c\u65f6\u4ece",(0,l.jsx)(n.code,{children:"mappedFiles"}),"\u4e2d\u79fb\u9664\u6587\u4ef6"]}),"\n",(0,l.jsxs)(n.p,{children:["commitLog\u6587\u4ef6\u5220\u9664\u903b\u8f91\u5230\u8fd9\u91cc\u5c31\u7ed3\u675f\u4e86 \u63a5\u4e0b\u6765\u6211\u4eec\u7ee7\u7eed\u770b\u770b",(0,l.jsx)(n.code,{children:"consumeQueue"}),"\u6587\u4ef6\u5220\u9664\u903b\u8f91"]}),"\n",(0,l.jsx)(n.h2,{id:"consumequeue\u5220\u9664",children:"consumeQueue\u5220\u9664"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"consumeQueue"}),"\u7684\u5220\u9664\u5165\u53e3\u5728",(0,l.jsx)(n.code,{children:"org.apache.rocketmq.store.DefaultMessageStore.CleanConsumeQueueService#deleteExpiredFiles"}),"\u65b9\u6cd5"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"        private void deleteExpiredFiles() {\n            // \u83b7\u53d6\u5220\u9664 ConsumeQueue \u6587\u4ef6\u7684\u65f6\u95f4\u95f4\u9694 \u9ed8\u8ba4 100ms\n            int deleteLogicsFilesInterval = DefaultMessageStore.this.getMessageStoreConfig().getDeleteConsumeQueueFilesInterval();\n            // \u83b7\u53d6 CommitLog \u7684\u6700\u5c0f\u504f\u79fb\u91cf\n            long minOffset = DefaultMessageStore.this.commitLog.getMinOffset();\n            // \u6bd4\u8f83\u5f53\u524d\u7684 minOffset \u548c\u4e0a\u4e00\u6b21\u8bb0\u5f55\u7684 lastPhysicalMinOffset\n            // \u5982\u679c minOffset \u5927\u4e8e lastPhysicalMinOffset\uff0c\u8bf4\u660e CommitLog \u4e2d\u6709\u65b0\u7684\u6d88\u606f\u88ab\u6e05\u7406\uff0c\u56e0\u6b64\u9700\u8981\u66f4\u65b0 lastPhysicalMinOffset \u5e76\u7ee7\u7eed\u6267\u884c\u5220\u9664\u8fc7\u671f\u6587\u4ef6\u7684\u903b\u8f91\n            if (minOffset > this.lastPhysicalMinOffset) {\n                this.lastPhysicalMinOffset = minOffset;\n\n                ConcurrentMap<String, ConcurrentMap<Integer, ConsumeQueueInterface>> tables = DefaultMessageStore.this.getConsumeQueueTable();\n\n                for (ConcurrentMap<Integer, ConsumeQueueInterface> maps : tables.values()) {\n                    for (ConsumeQueueInterface logic : maps.values()) {\n                        // \u5220\u9664\u8fc7\u671f\u6587\u4ef6\n                        int deleteCount = DefaultMessageStore.this.consumeQueueStore.deleteExpiredFile(logic, minOffset);\n                        if (deleteCount > 0 && deleteLogicsFilesInterval > 0) {\n                            try {\n                                Thread.sleep(deleteLogicsFilesInterval);\n                            } catch (InterruptedException ignored) {\n                            }\n                        }\n                    }\n                }\n\n                DefaultMessageStore.this.indexService.deleteExpiredFile(minOffset);\n            }\n        }\n"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"consumeQueue"}),"\u5220\u9664\u6587\u4ef6\u4e3b\u8981\u662f\u901a\u8fc7 CommitLog \u7684\u6700\u5c0f\u504f\u79fb\u91cf\uff08minOffset\uff09\u548c\u4e0a\u6b21\u8bb0\u5f55\u7684 lastPhysicalMinOffset \u8fdb\u884c\u6bd4\u8f83"]}),"\n",(0,l.jsxs)(n.p,{children:["\u5982\u679c ",(0,l.jsx)(n.code,{children:"minOffset"})," \u5927\u4e8e ",(0,l.jsx)(n.code,{children:"lastPhysicalMinOffset"}),"\uff0c\u8bf4\u660e ",(0,l.jsx)(n.code,{children:"CommitLog"})," \u4e2d\u6709\u65b0\u7684\u6d88\u606f\u88ab\u6e05\u7406\uff0c\u5c31\u9700\u8981\u6e05\u7406 ",(0,l.jsx)(n.code,{children:"ConsumeQueue"})," \u6587\u4ef6"]}),"\n",(0,l.jsx)(n.h2,{id:"indexfile\u5220\u9664",children:"IndexFile\u5220\u9664"}),"\n",(0,l.jsxs)(n.p,{children:["\u5728",(0,l.jsx)(n.code,{children:"consumeQueue"}),"\u6587\u4ef6\u5220\u9664\u4e2d\u4e5f\u4f1a\u8c03\u7528",(0,l.jsx)(n.code,{children:"DefaultMessageStore.this.indexService.deleteExpiredFile(minOffset);"}),"\u8fdb\u884c\u7d22\u5f15(IndexFile)\u5220\u9664"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:'    public void deleteExpiredFile(long offset) {\n        Object[] files = null;\n        try {\n            this.readWriteLock.readLock().lock();\n            if (this.indexFileList.isEmpty()) {\n                return;\n            }\n\n            long endPhyOffset = this.indexFileList.get(0).getEndPhyOffset();\n            if (endPhyOffset < offset) {\n                files = this.indexFileList.toArray();\n            }\n        } catch (Exception e) {\n            LOGGER.error("destroy exception", e);\n        } finally {\n            this.readWriteLock.readLock().unlock();\n        }\n\n        if (files != null) {\n            List<IndexFile> fileList = new ArrayList<>();\n            for (int i = 0; i < (files.length - 1); i++) {\n                IndexFile f = (IndexFile) files[i];\n                if (f.getEndPhyOffset() < offset) {\n                    fileList.add(f);\n                } else {\n                    break;\n                }\n            }\n\n            this.deleteExpiredFile(fileList);\n        }\n    }\n\n'})}),"\n",(0,l.jsxs)(n.p,{children:["\u5220\u9664\u7d22\u5f15\u6587\u4ef6\u7684\u903b\u8f91\u548c\u5220\u9664",(0,l.jsx)(n.code,{children:"consumeQueue"}),"\u6587\u4ef6\u7c7b\u4f3c\uff0c\u4e3b\u8981\u662f\u901a\u8fc7\u6bd4\u8f83",(0,l.jsx)(n.code,{children:"IndexFile"}),"\u7684",(0,l.jsx)(n.code,{children:"endPhyOffset"}),"\u548c",(0,l.jsx)(n.code,{children:"commitlog"}),"\u7684",(0,l.jsx)(n.code,{children:"minOffset"})]}),"\n",(0,l.jsxs)(n.p,{children:["\u5982\u679c",(0,l.jsx)(n.code,{children:"endPhyOffset"}),"\u5c0f\u4e8e",(0,l.jsx)(n.code,{children:"minOffset"}),"\u8bf4\u660eCommitLog \u4e2d\u7684\u6d88\u606f\u88ab\u6e05\u7406\uff0c\u5c31\u9700\u8981\u5220\u9664\u5bf9\u5e94\u7684",(0,l.jsx)(n.code,{children:"IndexFile"})]}),"\n",(0,l.jsx)(n.h2,{id:"50\u4e2d\u65b0\u589e\u7684correctlogicminoffset\u65b9\u6cd5",children:"5.0\u4e2d\u65b0\u589e\u7684correctLogicMinOffset\u65b9\u6cd5"}),"\n",(0,l.jsxs)(n.p,{children:["\u57285.0\u7248\u672c\u4e2d\u65b0\u589e\u4e86",(0,l.jsx)(n.code,{children:"correctLogicMinOffset"}),"\u65b9\u6cd5\uff0c\u4e3b\u8981\u662f\u7528\u6765\u4fee\u6b63",(0,l.jsx)(n.code,{children:"ConsumeQueue"}),"\u6587\u4ef6\u7684\u6700\u5c0f\u504f\u79fb\u91cf"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"private void correctLogicMinOffset() {\n    //\u83b7\u53d6\u4e0a\u4e00\u6b21\u5f3a\u5236\u6821\u6b63\u7684\u65f6\u95f4\n    long lastForeCorrectTimeCurRun = lastForceCorrectTime;\n    // \u83b7\u53d6 CommitLog \u7684\u6700\u5c0f\u7269\u7406\u504f\u79fb\u91cf\n    long minPhyOffset = getMinPhyOffset();\n    ConcurrentMap<String, ConcurrentMap<Integer, ConsumeQueueInterface>> tables = DefaultMessageStore.this.getConsumeQueueTable();\n    for (ConcurrentMap<Integer, ConsumeQueueInterface> maps : tables.values()) {\n        for (ConsumeQueueInterface logic : maps.values()) {\n            // \u5982\u679c ConsumeQueue \u7684\u7c7b\u578b\u662f SimpleCQ\uff0c\u5219\u8df3\u8fc7\u6821\u6b63\u903b\u8f91\n            if (Objects.equals(CQType.SimpleCQ, logic.getCQType())) {\n                // cq is not supported for now.\n                continue;\n            }\n            // \u68c0\u67e5\u5f53\u524d ConsumeQueue \u662f\u5426\u9700\u8981\u6821\u6b63 logic \u662f\u5f53\u524d\u7684 ConsumeQueue minPhyOffset \u662f CommitLog \u7684\u6700\u5c0f\u7269\u7406\u504f\u79fb\u91cf lastForeCorrectTimeCurRun \u662f\u4e0a\u4e00\u6b21\u5f3a\u5236\u6821\u6b63\u7684\u65f6\u95f4\u6233\n            if (needCorrect(logic, minPhyOffset, lastForeCorrectTimeCurRun)) {\n                doCorrect(logic, minPhyOffset);\n            }\n        }\n    }\n}\n"})}),"\n",(0,l.jsx)(n.h2,{id:"\u603b\u7ed3",children:"\u603b\u7ed3"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"RocketMQ"}),"\u7684\u6587\u4ef6\u5220\u9664\u4e3b\u8981\u662f\u901a\u8fc7\u5b9a\u65f6\u4efb\u52a1\u6765\u6267\u884c\uff0c\u4e3b\u8981\u662f\u5220\u9664",(0,l.jsx)(n.code,{children:"commitLog"}),"\u3001",(0,l.jsx)(n.code,{children:"consumeQueue"}),"\u3001",(0,l.jsx)(n.code,{children:"indexFile"}),"\u6587\u4ef6"]}),"\n",(0,l.jsxs)(n.p,{children:["\u5b9a\u65f6\u4efb\u52a1\u9ed8\u8ba410s\u6267\u884c\u4e00\u6b21\uff0c\u901a\u8fc7",(0,l.jsx)(n.code,{children:"commitLog"}),"\u7684\u6700\u5c0f\u504f\u79fb\u91cf\u548c",(0,l.jsx)(n.code,{children:"consumeQueue"}),"\u7684\u6700\u5c0f\u504f\u79fb\u91cf\u8fdb\u884c\u6587\u4ef6\u7684\u5220\u9664"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"RocketMQ"}),"\u57285.0\u7248\u672c\u4e2d\u65b0\u589e\u4e86",(0,l.jsx)(n.code,{children:"correctLogicMinOffset"}),"\u65b9\u6cd5\uff0c\u4e3b\u8981\u662f\u7528\u6765\u4fee\u6b63",(0,l.jsx)(n.code,{children:"ConsumeQueue"}),"\u6587\u4ef6\u7684\u6700\u5c0f\u504f\u79fb\u91cf\uff0c\u4fdd\u8bc1",(0,l.jsx)(n.code,{children:"ConsumeQueue"}),"\u6587\u4ef6\u7684\u6b63\u786e\u6027"]}),"\n",(0,l.jsx)(n.p,{children:"\u6587\u4ef6\u662f\u5426\u9700\u8981\u5220\u9664\u4e09\u4e2a\u6761\u4ef6\u6ee1\u8db3\u4e00\u4e2a\u5373\u53ef"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"\u5230\u8fbe\u6307\u5b9a\u6587\u4ef6\u5220\u9664\u65f6\u95f4\uff08\u9ed8\u8ba4\u51cc\u66684\u70b9\uff09"}),"\n",(0,l.jsx)(n.li,{children:"\u78c1\u76d8\u7a7a\u95f4\u4e0d\u8db3\uff0c \u9ed8\u8ba475%"}),"\n",(0,l.jsx)(n.li,{children:"\u5f3a\u5236\u5220\u9664(\u901a\u8fc7admin\u5de5\u5177\u89e6\u53d1)"}),"\n"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u5982\u679c\u60f3\u8981\u624b\u52a8\u5f3a\u5236\u5220\u9664\u53ef\u4ee5\u901a\u8fc7",(0,l.jsx)(n.code,{children:"admin"}),"\u547d\u4ee4\u5de5\u5177 \u6267\u884c ",(0,l.jsx)(n.code,{children:"deleteExpiredCommitLog"}),"\u547d\u4ee4"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"consumeQueue"}),"\u3001",(0,l.jsx)(n.code,{children:"indexFile"}),"\u6587\u4ef6\u5220\u9664\u4e3b\u8981\u662f\u548c",(0,l.jsx)(n.code,{children:"commitLog"}),"\u7684\u6700\u5c0f\u504f\u79fb\u91cf\u8fdb\u884c\u5bf9\u6bd4\uff0c\u7136\u540e\u8fdb\u884c\u6587\u4ef6\u5220\u9664"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["\u9ed8\u8ba4\u53ea\u4f1a\u5220\u9664\u8fc7\u671f\u7684\u6587\u4ef6\uff0c\u5982\u679c\u60f3\u8981\u5f3a\u5236\u5220\u9664\u53ea\u80fd\u901a\u8fc7\u901a\u8fc7",(0,l.jsx)(n.code,{children:"admin"}),"\u547d\u4ee4\u5de5\u5177 \u6267\u884c ",(0,l.jsx)(n.code,{children:"deleteExpiredCommitLog"}),"\u547d\u4ee4"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u5982\u679c\u6211\u4eec\u7ebf\u4e0a\u7684\u78c1\u76d8\u4e0d\u8db3\u4e86\u6211\u4eec\u5c31\u6709\u51e0\u4e2a\u9009\u62e9"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"\u78c1\u76d8\u6269\u5bb9"}),"\n",(0,l.jsxs)(n.li,{children:["\u901a\u8fc7",(0,l.jsx)(n.code,{children:"admin"}),"\u547d\u4ee4\u5de5\u5177 \u6267\u884c ",(0,l.jsx)(n.code,{children:"deleteExpiredCommitLog"}),"\u547d\u4ee4\u8fdb\u884c\u5f3a\u5236\u6587\u4ef6\u5220\u9664\uff0c\u53ef\u80fd\u4f1a\u4e22\u6d88\u606f\uff0c\u4e0d\u63a8\u8350\u3002\u5982\u679c\u6d88\u606f\u4e0d\u91cd\u8981\u8fd0\u884c\u4e22\u5931\u53ef\u4ee5\u6267\u884c"]}),"\n",(0,l.jsx)(n.li,{children:"\u78c1\u76d8\u8d85\u8fc775%\u4f1a\u81ea\u52a8\u5220\u9664\u8fc7\u671f\u6587\u4ef6\uff0c\u4e0d\u8981\u614c"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>r});var s=i(6540);const l={},t=s.createContext(l);function c(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:c(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);