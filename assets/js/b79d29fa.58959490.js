"use strict";(self.webpackChunkweihubeats_website=self.webpackChunkweihubeats_website||[]).push([[665],{3271:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"MQ/Kafka/\u8fd0\u7ef4\u90e8\u7f72/kafka\u96c6\u7fa4\u6269\u5bb9\u5b9e\u6218","title":"kafka\u96c6\u7fa4\u6269\u5bb9\u5b9e\u6218","description":"\u80cc\u666f","source":"@site/docs/MQ/Kafka/\u8fd0\u7ef4\u90e8\u7f72/kafka\u96c6\u7fa4\u6269\u5bb9\u5b9e\u6218.md","sourceDirName":"MQ/Kafka/\u8fd0\u7ef4\u90e8\u7f72","slug":"/MQ/Kafka/\u8fd0\u7ef4\u90e8\u7f72/kafka\u96c6\u7fa4\u6269\u5bb9\u5b9e\u6218","permalink":"/docs/MQ/Kafka/\u8fd0\u7ef4\u90e8\u7f72/kafka\u96c6\u7fa4\u6269\u5bb9\u5b9e\u6218","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/MQ/Kafka/\u8fd0\u7ef4\u90e8\u7f72/kafka\u96c6\u7fa4\u6269\u5bb9\u5b9e\u6218.md","tags":[],"version":"current","frontMatter":{},"sidebar":"Kafka","previous":{"title":"Kafka\u5e38\u7528\u547d\u4ee4","permalink":"/docs/MQ/Kafka/\u8fd0\u7ef4\u90e8\u7f72/Kafka\u5e38\u7528\u547d\u4ee4"}}');var o=s(4848),r=s(8453);const i={},a=void 0,c={},l=[{value:"\u80cc\u666f",id:"\u80cc\u666f",level:2},{value:"\u5982\u4f55\u6269\u5bb9",id:"\u5982\u4f55\u6269\u5bb9",level:2},{value:"\u5b9e\u6218",id:"\u5b9e\u6218",level:2},{value:"1. \u4f18\u5316linux\u5185\u6838\u53c2\u6570",id:"1-\u4f18\u5316linux\u5185\u6838\u53c2\u6570",level:3},{value:"2. \u5b89\u88c5jdk11",id:"2-\u5b89\u88c5jdk11",level:3},{value:"3. \u4e0b\u8f7dkafka\u4e8c\u8fdb\u5236\u5305",id:"3-\u4e0b\u8f7dkafka\u4e8c\u8fdb\u5236\u5305",level:3},{value:"4. \u89e3\u538b",id:"4-\u89e3\u538b",level:3},{value:"5. \u4fee\u6539<code>broker</code>\u914d\u7f6e\u6587\u4ef6",id:"5-\u4fee\u6539broker\u914d\u7f6e\u6587\u4ef6",level:3},{value:"6. \u683c\u5f0f\u5316broker",id:"6-\u683c\u5f0f\u5316broker",level:3},{value:"7. \u542f\u52a8broker",id:"7-\u542f\u52a8broker",level:3},{value:"8. \u65e7\u8282\u70b9\u4e0b\u7ebf",id:"8-\u65e7\u8282\u70b9\u4e0b\u7ebf",level:3}];function d(e){const n={blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"\u80cc\u666f",children:"\u80cc\u666f"}),"\n",(0,o.jsxs)(n.p,{children:["\u7ebf\u4e0a\u7684",(0,o.jsx)(n.code,{children:"Kafka"}),"\u96c6\u7fa4\u91c7\u7528\u7684\u90e8\u7f72\u65b9\u5f0f\u4e3a",(0,o.jsx)(n.code,{children:"KRaft"}),"\u6a21\u5f0f\uff0c3\u4e2a",(0,o.jsx)(n.code,{children:"KRaft"}),"+2\u4e2a",(0,o.jsx)(n.code,{children:"broker"}),"\u3002",(0,o.jsx)(n.code,{children:"Kafka"}),"\u7248\u672c",(0,o.jsx)(n.code,{children:"kafka_2.13-3.5.0"})]}),"\n",(0,o.jsxs)(n.p,{children:["\u7531\u4e8e\u4e00\u4e9b\u539f\u56e0\u8981\u4e0b\u7ebf\u6389\u65e7\u7684",(0,o.jsx)(n.code,{children:"broker"}),"\u65b0\u589e\u4e09\u4e2a",(0,o.jsx)(n.code,{children:"broker"})]}),"\n",(0,o.jsx)(n.h2,{id:"\u5982\u4f55\u6269\u5bb9",children:"\u5982\u4f55\u6269\u5bb9"}),"\n",(0,o.jsxs)(n.p,{children:["\u5c06\u65b0\u670d\u52a1\u5668\u6dfb\u52a0\u5230",(0,o.jsx)(n.code,{children:"Kafka"}),"\u96c6\u7fa4\u5f88\u5bb9\u6613\uff0c\u53ea\u9700\u4e3a\u5b83\u4eec\u5206\u914d\u4e00\u4e2a\u552f\u4e00\u7684",(0,o.jsx)(n.code,{children:"brokerId"})," \u5373\u53ef\uff0c\u65b0\u7684",(0,o.jsx)(n.code,{children:"broker"}),"\u5c31\u4f1a\u81ea\u52a8\u52a0\u5165\u5230",(0,o.jsx)(n.code,{children:"Kafka"}),"\u96c6\u7fa4\u4e2d"]}),"\n",(0,o.jsxs)(n.p,{children:["\u4e0d\u8fc7\u8fd9\u4e9b\u65b0\u670d\u52a1\u5668\u4e0d\u4f1a\u81ea\u52a8\u5206\u914d\u4efb\u4f55\u6570\u636e\u5206\u533a\uff0c\u4e5f\u5c31\u662f\u539f\u5148\u7684",(0,o.jsx)(n.code,{children:"topic"}),"\u7684\u6570\u636e\u4e0d\u4f1a\u5b58\u5728\u65b0\u96c6\u7fa4\uff0c\u4e5f\u4e0d\u4f1a\u5206\u62c5\u539f\u6765",(0,o.jsx)(n.code,{children:"topic"}),"\u7684\u8bf7\u6c42"]}),"\n",(0,o.jsxs)(n.p,{children:["\u5982\u679c\u8981\u65e7\u96c6\u7fa4\u7684",(0,o.jsx)(n.code,{children:"topic"}),"\u5728\u65b0\u96c6\u7fa4\u6dfb\u52a0\u5206\u533a\u6570\u636e\uff0c\u5c31\u9700\u8981\u624b\u52a8\u8fc1\u79fb\u3002"]}),"\n",(0,o.jsxs)(n.p,{children:["\u5206\u533a\u8fc1\u79fb",(0,o.jsx)(n.code,{children:"Kafka"}),"\u63d0\u4f9b\u4e86",(0,o.jsx)(n.code,{children:"kafka-reassign-partitions.sh"}),"\u811a\u672c\uff0c\u6570\u636e\u8fc1\u79fb\u8fc7\u7a0b\u662f\u624b\u52a8\uff0c\u4f46\u662f\u5b8c\u5168\u81ea\u52a8\u5316"]}),"\n",(0,o.jsx)(n.h2,{id:"\u5b9e\u6218",children:"\u5b9e\u6218"}),"\n",(0,o.jsx)(n.h3,{id:"1-\u4f18\u5316linux\u5185\u6838\u53c2\u6570",children:"1. \u4f18\u5316linux\u5185\u6838\u53c2\u6570"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"sh os.sh\n"})}),"\n",(0,o.jsx)(n.p,{children:"os\u7684\u8be6\u7ec6\u811a\u672c\u5982\u4e0b"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:'#!/bin/bash\n\n# \u786e\u4fdd\u811a\u672c\u4ee5root\u6743\u9650\u8fd0\u884c\nif [ "$(id -u)" != "0" ]; then\n   echo "\u8be5\u811a\u672c\u5fc5\u987b\u4ee5root\u6743\u9650\u8fd0\u884c" 1>&2\n   exit 1\nfi\n\n# \u66f4\u65b0\u6587\u4ef6\u63cf\u8ff0\u7b26\u9650\u5236\necho "* soft nofile 100000" >> /etc/security/limits.conf\necho "* hard nofile 100000" >> /etc/security/limits.conf\n\n# \u66f4\u65b0\u865a\u62df\u5185\u5b58\u8bbe\u7f6e\nsysctl -w vm.swappiness=1\necho "vm.swappiness=1" >> /etc/sysctl.conf\n\nsysctl -w vm.max_map_count=262144\necho "vm.max_map_count=262144" >> /etc/sysctl.conf\n\n# \u66f4\u65b0\u7f51\u7edc\u8bbe\u7f6e\nsysctl -w net.ipv4.tcp_fin_timeout=30\nsysctl -w net.ipv4.tcp_tw_reuse=1\nsysctl -w net.core.rmem_max=16777216\nsysctl -w net.core.wmem_max=16777216\nsysctl -w net.ipv4.tcp_max_syn_backlog=8096\nsysctl -w net.core.somaxconn=8192\nsysctl -w net.core.netdev_max_backlog=4096\nsysctl -w net.ipv4.tcp_rmem=\'4096 87380 16777216\'\nsysctl -w net.ipv4.tcp_wmem=\'4096 65536 16777216\'\nsysctl -w net.ipv4.tcp_keepalive_intvl=30\nsysctl -w net.ipv4.tcp_keepalive_probes=5\nsysctl -w net.ipv4.tcp_keepalive_time=120\n\necho "net.ipv4.tcp_fin_timeout=30" >> /etc/sysctl.conf\necho "net.ipv4.tcp_tw_reuse=1" >> /etc/sysctl.conf\necho "net.core.rmem_max=16777216" >> /etc/sysctl.conf\necho "net.core.wmem_max=16777216" >> /etc/sysctl.conf\necho "net.ipv4.tcp_max_syn_backlog=8096" >> /etc/sysctl.conf\necho "net.core.somaxconn=8192" >> /etc/sysctl.conf\necho "net.core.netdev_max_backlog=4096" >> /etc/sysctl.conf\necho "net.ipv4.tcp_rmem=4096 87380 16777216" >> /etc/sysctl.conf\necho "net.ipv4.tcp_wmem=4096 65536 16777216" >> /etc/sysctl.conf\necho "net.ipv4.tcp_keepalive_intvl=30" >> /etc/sysctl.conf\necho "net.ipv4.tcp_keepalive_probes=5" >> /etc/sysctl.conf\necho "net.ipv4.tcp_keepalive_time=120" >> /etc/sysctl.conf\n\n# \u66f4\u65b0\u6700\u5927\u7ebf\u7a0b\u6570\u9650\u5236\necho "* soft nproc 4096" >> /etc/security/limits.d/90-nproc.conf\necho "* hard nproc 4096" >> /etc/security/limits.d/90-nproc.conf\n\n# \u5e94\u7528sysctl\u8bbe\u7f6e\nsysctl -p\n\necho "\u7cfb\u7edf\u8c03\u4f18\u5b8c\u6210\u3002\u53ef\u80fd\u9700\u8981\u91cd\u542f\u4ee5\u5e94\u7528\u67d0\u4e9b\u66f4\u6539\u3002"\n'})}),"\n",(0,o.jsx)(n.h3,{id:"2-\u5b89\u88c5jdk11",children:"2. \u5b89\u88c5jdk11"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"\n### 1. \u5b89\u88c5jdk11\n\n```shell\nsudo apt update\napt install openjdk-11-jdk -y\n"})}),"\n",(0,o.jsx)(n.h3,{id:"3-\u4e0b\u8f7dkafka\u4e8c\u8fdb\u5236\u5305",children:"3. \u4e0b\u8f7dkafka\u4e8c\u8fdb\u5236\u5305"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"wget http://mirrors.aliyun.com/apache/kafka/3.5.0/kafka_2.13-3.5.0.tgz\n"})}),"\n",(0,o.jsx)(n.h3,{id:"4-\u89e3\u538b",children:"4. \u89e3\u538b"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"tar -xzf kafka_2.13-3.5.0.tgz\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"5-\u4fee\u6539broker\u914d\u7f6e\u6587\u4ef6",children:["5. \u4fee\u6539",(0,o.jsx)(n.code,{children:"broker"}),"\u914d\u7f6e\u6587\u4ef6"]}),"\n",(0,o.jsx)(n.p,{children:"\u4e3b\u8981\u4fee\u6539\u53c2\u6570"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"node.id \u552f\u4e00\uff0c\u4e0d\u80fd\u4e0e\u5176\u4ed6broker\u76f8\u540c"}),"\n",(0,o.jsx)(n.li,{children:"log.dirs Kafka\u65e5\u5fd7\uff08\u6d88\u606f\uff09\u7684\u5b58\u50a8\u8def\u5f84"}),"\n",(0,o.jsx)(n.li,{children:"Listeners: \u914d\u7f6eBroker\u7684\u76d1\u542c\u5730\u5740\uff0c\u7528\u4e8e\u5ba2\u6237\u7aef\u8fde\u63a5"}),"\n",(0,o.jsx)(n.li,{children:"log.dirs\u9700\u8981\u4fee\u6539\u6210\u591a\u5757\u78c1\u76d8\u7684\u8def\u5f84"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:'# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the "License"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an "AS IS" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n#\n# This configuration file is intended for use in KRaft mode, where\n# Apache ZooKeeper is not present.\n#\n\n############################# Server Basics #############################\n\n# The role of this server. Setting this puts us in KRaft mode\nprocess.roles=broker\n\n# The node id associated with this instance\'s roles\nnode.id=6\n\n# The connect string for the controller quorum\ncontroller.quorum.voters=1@kafka-controller-001.xiaozou.com:9093,2@kafka-controller-002.xiaozou.com:9093,3@kafka-controller-003.xiaozou.com:9093\n\n############################# Socket Server Settings #############################\n\n# The address the socket server listens on. If not configured, the host name will be equal to the value of\n# java.net.InetAddress.getCanonicalHostName(), with PLAINTEXT listener name, and port 9092.\n#   FORMAT:\n#     listeners = listener_name://host_name:port\n#   EXAMPLE:\n#     listeners = PLAINTEXT://your.host.name:9092\nlisteners=PLAINTEXT://kafka-002.xiaozou.com:9092\n\n# Name of listener used for communication between brokers.\ninter.broker.listener.name=PLAINTEXT\n\n\n# A comma-separated list of the names of the listeners used by the controller.\n# This is required if running in KRaft mode. On a node with `process.roles=broker`, only the first listed listener will be used by the broker.\ncontroller.listener.names=CONTROLLER\n\n# Maps listener names to security protocols, the default is for them to be the same. See the config documentation for more details\nlistener.security.protocol.map=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL\n\n# The number of threads that the server uses for receiving requests from the network and sending responses to the network\nnum.network.threads=3\n\n# The number of threads that the server uses for processing requests, which may include disk I/O\nnum.io.threads=8\n\n# The send buffer (SO_SNDBUF) used by the socket server\nsocket.send.buffer.bytes=102400\n\n# The receive buffer (SO_RCVBUF) used by the socket server\nsocket.receive.buffer.bytes=102400\n\n# The maximum size of a request that the socket server will accept (protection against OOM)\nsocket.request.max.bytes=104857600\n\n\n############################# Log Basics #############################\n\n# A comma separated list of directories under which to store log files\nlog.dirs=/data/kraft-broker-logs,/data1/kraft-broker-logs,/data2/kraft-broker-logs\n\n# The default number of log partitions per topic. More partitions allow greater\n# parallelism for consumption, but this will also result in more files across\n# the brokers.\nnum.partitions=2\n\n# The number of threads per data directory to be used for log recovery at startup and flushing at shutdown.\n# This value is recommended to be increased for installations with data dirs located in RAID array.\nnum.recovery.threads.per.data.dir=1\n\n############################# Internal Topic Settings  #############################\n# The replication factor for the group metadata internal topics "__consumer_offsets" and "__transaction_state"\n# For anything other than development testing, a value greater than 1 is recommended to ensure availability such as 3.\noffsets.topic.replication.factor=2\ntransaction.state.log.replication.factor=2\ntransaction.state.log.min.isr=2\n\n############################# Log Flush Policy #############################\n\n# Messages are immediately written to the filesystem but by default we only fsync() to sync\n# the OS cache lazily. The following configurations control the flush of data to disk.\n# There are a few important trade-offs here:\n#    1. Durability: Unflushed data may be lost if you are not using replication.\n#    2. Latency: Very large flush intervals may lead to latency spikes when the flush does occur as there will be a lot of data to flush.\n#    3. Throughput: The flush is generally the most expensive operation, and a small flush interval may lead to excessive seeks.\n# The settings below allow one to configure the flush policy to flush data after a period of time or\n# every N messages (or both). This can be done globally and overridden on a per-topic basis.\n\n# The number of messages to accept before forcing a flush of data to disk\n#log.flush.interval.messages=10000\n\n# The maximum amount of time a message can sit in a log before we force a flush\n#log.flush.interval.ms=1000\n\n############################# Log Retention Policy #############################\n\n# The following configurations control the disposal of log segments. The policy can\n# be set to delete segments after a period of time, or after a given size has accumulated.\n# A segment will be deleted whenever *either* of these criteria are met. Deletion always happens\n# from the end of the log.\n\n# The minimum age of a log file to be eligible for deletion due to age\nlog.retention.hours=168\n\n# A size-based retention policy for logs. Segments are pruned from the log unless the remaining\n# segments drop below log.retention.bytes. Functions independently of log.retention.hours.\n#log.retention.bytes=1073741824\n\n# The maximum size of a log segment file. When this size is reached a new log segment will be created.\nlog.segment.bytes=1073741824\n\n# The interval at which log segments are checked to see if they can be deleted according\n# to the retention policies\nlog.retention.check.interval.ms=300000\n\nauto.create.topics.enable=false\nmessage.max.bytes=10485760\n'})}),"\n",(0,o.jsx)(n.h3,{id:"6-\u683c\u5f0f\u5316broker",children:"6. \u683c\u5f0f\u5316broker"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"sh /home/ubuntu/kafka_2.13-3.5.0/bin/kafka-storage.sh format -t mzDehCx0RNmxa27PRMpNkB  -c /home/ubuntu/kafka_2.13-3.5.0/config/kraft/broker.properties\n"})}),"\n",(0,o.jsx)(n.p,{children:"\u6ce8\u610f\u8fd9\u91cc\u7684\u96c6\u7fa4id\u662f\u4e4b\u524d\u751f\u6210\u7684\u3002\u5982\u679c\u4e0d\u8bb0\u5f97\u53ef\u4ee5\u7528\u5982\u4e0b\u65b9\u5f0f\u67e5\u8be2"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"\u8fdb\u5165\u5230kafka log\u6587\u4ef6\u76ee\u5f55"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"cd /tmp/kraft-broker-logs\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsxs)(n.li,{children:["\u627e\u5230",(0,o.jsx)(n.code,{children:"meta.properties"}),"\u6587\u4ef6\uff0c\u7136\u540e\u67e5\u770b"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"vim meta.properties\n"})}),"\n",(0,o.jsx)(n.p,{children:"\u8f93\u51fa\u96c6\u7fa4\u7684\u5143\u6570\u636e\u4fe1\u606f\u5982\u4e0b"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-properties",children:"node.id=5\nversion=1\ncluster.id=mzDehCx0RNmxa27PRMpNkB\n"})}),"\n",(0,o.jsx)(n.h3,{id:"7-\u542f\u52a8broker",children:"7. \u542f\u52a8broker"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:'export KAFKA_HEAP_OPTS="-Xmx6G -Xms6G"&&JMX_PORT=9988 nohup sh /data/kafka_2.13-3.5.0/bin/kafka-server-start.sh /data/kafka_2.13-3.5.0/config/kraft/broker.properties &\n'})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"\u8fd9\u91cc\u7684JVM\u5185\u5b58\u7ed96G\u57fa\u672c\u5c31\u591f\u4e86\uff0cKafka\u4e3b\u8981\u4f7f\u7528\u7684\u662f\u5806\u5916\u5185\u5b58"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"8-\u65e7\u8282\u70b9\u4e0b\u7ebf",children:"8. \u65e7\u8282\u70b9\u4e0b\u7ebf"}),"\n",(0,o.jsxs)(n.p,{children:["\u8fd9\u91cc\u7531\u4e8e\u7ebf\u4e0a\u7684\u4e1a\u52a1\u5141\u8bb8\u4e00\u5b9a\u65f6\u95f4\u4e0d\u53ef\u7528\u3002\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u4e0b\u7ebf\u65e7",(0,o.jsx)(n.code,{children:"broker"}),"\uff0c\u4e0d\u9700\u8981\u8fdb\u884c\u5206\u533a\u8fc1\u79fb\uff0c\u7136\u540e\u91cd\u65b0\u521b\u5efa",(0,o.jsx)(n.code,{children:"topic"}),"\u5373\u53ef"]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["\u6700\u597d\u7684\u65e0\u635f\u65b9\u5f0f\u8fd8\u662f\u5148\u8fdb\u884c\u5206\u533a\u8fc1\u79fb\uff0c\u7136\u540e\u518d\u4e0b\u7ebf\u65e7",(0,o.jsx)(n.code,{children:"broker"})]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["\u9700\u8981\u6ce8\u610f\u5982\u679c\u6709\u65e7\u8282\u70b9\u4e0b\u7ebf\u53ef\u80fd\u4f1a\u51fa\u73b0\u6d88\u606f\u53d1\u9001\u6b63\u5e38\uff0c\u6d88\u606f\u6d88\u8d39\u5931\u8d25\u7684\u60c5\u51b5\uff0c\u539f\u56e0\u53ef\u80fd\u662f",(0,o.jsx)(n.code,{children:"__consumer_offsets"}),"\u8fd9\u4e2a",(0,o.jsx)(n.code,{children:"topic"}),"\u6ca1\u6709\u81ea\u52a8\u8fdb\u884c\u5206\u533a\u8fc1\u79fb\uff0c\u4ec5\u5728\u65e7",(0,o.jsx)(n.code,{children:"broker"}),"\u5b58\u5728"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>a});var t=s(6540);const o={},r=t.createContext(o);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);